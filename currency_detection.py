# -*- coding: utf-8 -*-
"""Currency-Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b6P9TfHlKUS_oT9r6HH73F6A4OZs2umK

**Reading Images For Proccessing**
"""

from skimage.metrics import structural_similarity as ssim
import cv2
import matplotlib.pyplot as plt
import numpy as np
from gtts import gTTS
import os

real_image_raw = cv2.imread('real.jpg')
fake_image_raw = cv2.imread('fake.jpg')

real_rgb = cv2.cvtColor(real_image_raw, cv2.COLOR_BGR2RGB)
fake_rgb = cv2.cvtColor(fake_image_raw, cv2.COLOR_BGR2RGB)

plt.imshow(real_rgb)
plt.show()

plt.imshow(fake_rgb)
plt.show()

"""**Converting Raw Images Color Space to Gray Scale**"""

real_img_hsv = cv2.cvtColor(real_image_raw, cv2.COLOR_BGR2HSV)
fake_img_hsv = cv2.cvtColor(fake_image_raw, cv2.COLOR_BGR2HSV)

plt.imshow(real_img_hsv)
plt.show()

plt.imshow(fake_img_hsv)
plt.show()

real_atr = real_img_hsv[60:130, 480:550]
fake_atr = fake_img_hsv[60:130, 480:550]

plt.imshow(real_atr)
plt.show()

plt.imshow(fake_atr)
plt.show()

satThresh = 0
valThresh = 180
g = real_atr[:,:,1] > satThresh
h = real_atr[:,:,2] < valThresh

g1 = fake_atr[:,:,1] > satThresh
h1 = fake_atr[:,:,2] < valThresh

bw_real = g & h
bw_fake = g1 & h1

plt.imshow(bw_real, cmap='gray')
plt.show()

plt.imshow(bw_fake, cmap='gray')
plt.show()

error = ssim(bw_real, bw_fake)

text = 'The Provided Currency note is Fake'

if error >= 0.5:
  text = 'The Provided Currency note is legitimate'

speech = gTTS(text=text, lang='en', slow=False)
speech.save('speech.mp3')
os.system('mpg321 speech.mp3')